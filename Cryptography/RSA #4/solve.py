n = 3278064158476635383884254245460631308165481990481231795049770056636870765315510940977494937179833574095946024428144386577564405593733309394304938914592432105106574644984657129373438178677109503948037001899958060658766316247985449213458426274266900780813671443315485865169719422370206471233007583933327047
c = 561261456088151658788205983278711260001775041945483722291279573015285933177799445942566022132087646770865990938682839783912858868035483033504982356319652960421206950606289173577830378550350155991356062791043171925776303157518273043721823274783211001281991636720866523884364995649708162066296404014701247
e = 65537


p1 = 2153394569
p2 = 2246338793
p3 = 2281121809
p4 = 2339114993
p5 = 2371133183
p6 = 2438265691
p7 = 2475058709
p8 = 2517449761
p9 = 2528836993
p10 = 2619668969
p11 = 2643164851
p12 = 2742279511
p13 = 2813543573
p14 = 2891670433
p15 = 2918467039
p16 = 2919482771
p17 = 3038864483
p18 = 3115746869
p19 = 3151969649
p20 = 3153836437
p21 = 3405705847
p22 = 3459208783
p23 = 3523744181
p24 = 3682489981
p25 = 3773457197
p26 = 3901396979
p27 = 4037329183
p28 = 4095896503
p29 = 4136920481
p30 = 4143220531
p31 = 4152896129
p32 = 4247910109

primes = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32]


def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m

ts = []
xs = []
ds = []

for i in range(len(primes)):
	ds.append(modinv(e, primes[i]-1))

m = primes[0]

for i in range(1, len(primes)):
	ts.append(modinv(m, primes[i]))
	m = m * primes[i]

for i in range(len(primes)):
	xs.append(pow((c%primes[i]), ds[i], primes[i]))

x = xs[0]
m = primes[0]

for i in range(1, len(primes)):
	x = x + m * ((xs[i] - x % primes[i]) * (ts[i-1] % primes[i]))
	m = m * primes[i]


print hex(x%n)[2:-1].decode("hex")